var app=angular.module("app",["ui.router"]).config(function(e,t){t.otherwise("/home"),e.state("home",{url:"/home",templateUrl:"/views/partial-home.html"}).state("about",{url:"/about"})});
window.onload=function(){function a(){n.clearRect(0,0,d,o),n.fillStyle="rgba(255, 255, 255, 0.8)",n.beginPath();for(var a=0;a<h;a++){var t=e[a];n.moveTo(t.x,t.y),n.arc(t.x,t.y,t.r,0,2*Math.PI,!0)}n.fill(),r()}function r(){l+=.01;for(var a=0;a<h;a++){var r=e[a];r.y+=Math.cos(l+r.d)+1+r.r/2,r.x+=2*Math.sin(l),(r.x>d+5||r.x<-5||r.y>o)&&(a%3>0?e[a]={x:Math.random()*d,y:-10,r:r.r,d:r.d}:Math.sin(l)>0?e[a]={x:-5,y:Math.random()*o,r:r.r,d:r.d}:e[a]={x:d+5,y:Math.random()*o,r:r.r,d:r.d})}}var t=document.getElementById("parallax"),n=t.getContext("2d"),d=window.innerWidth,o=300;t.width=d,t.height=o;for(var h=100,e=[],i=0;i<h;i++)e.push({x:Math.random()*d,y:Math.random()*o,r:4*Math.random()+1,d:Math.random()*h});var l=0;setInterval(a,33)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsInNub3dlZmZlY3QuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJ0ZW1wbGF0ZVVybCIsIndpbmRvdyIsIm9ubG9hZCIsImRyYXciLCJjdHgiLCJjbGVhclJlY3QiLCJXIiwiSCIsImZpbGxTdHlsZSIsImJlZ2luUGF0aCIsImkiLCJtcCIsInAiLCJwYXJ0aWNsZXMiLCJtb3ZlVG8iLCJ4IiwieSIsImFyYyIsInIiLCJNYXRoIiwiUEkiLCJmaWxsIiwidXBkYXRlIiwiYW5nbGUiLCJjb3MiLCJkIiwic2luIiwicmFuZG9tIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdldENvbnRleHQiLCJpbm5lcldpZHRoIiwid2lkdGgiLCJoZWlnaHQiLCJwdXNoIiwic2V0SW50ZXJ2YWwiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUlBLEtBQU1DLFFBQ1RDLE9BQU8sT0FDTixjQUdEQyxPQUFPLFNBQVNDLEVBQWdCQyxHQUM3QkEsRUFBbUJDLFVBQVUsU0FDN0JGLEVBRUtHLE1BQU0sUUFDSEMsSUFBSyxRQUNMQyxZQUFhLDZCQUdoQkYsTUFBTSxTQUNIQyxJQUFLO0FDZmpCRSxPQUFPQyxPQUFTLFdBeUJkLFFBQVNDLEtBRVBDLEVBQUlDLFVBQVUsRUFBRyxFQUFHQyxFQUFHQyxHQUV2QkgsRUFBSUksVUFBWSwyQkFDaEJKLEVBQUlLLFdBQ0osS0FBSSxHQUFJQyxHQUFJLEVBQUdBLEVBQUlDLEVBQUlELElBQ3ZCLENBQ0UsR0FBSUUsR0FBSUMsRUFBVUgsRUFDbEJOLEdBQUlVLE9BQU9GLEVBQUVHLEVBQUdILEVBQUVJLEdBQ2xCWixFQUFJYSxJQUFJTCxFQUFFRyxFQUFHSCxFQUFFSSxFQUFHSixFQUFFTSxFQUFHLEVBQVcsRUFBUkMsS0FBS0MsSUFBTSxHQUV2Q2hCLEVBQUlpQixPQUNKQyxJQU1GLFFBQVNBLEtBRVBDLEdBQVMsR0FDVCxLQUFJLEdBQUliLEdBQUksRUFBR0EsRUFBSUMsRUFBSUQsSUFDdkIsQ0FDRSxHQUFJRSxHQUFJQyxFQUFVSCxFQUtsQkUsR0FBRUksR0FBS0csS0FBS0ssSUFBSUQsRUFBTVgsRUFBRWEsR0FBSyxFQUFJYixFQUFFTSxFQUFFLEVBQ3JDTixFQUFFRyxHQUF1QixFQUFsQkksS0FBS08sSUFBSUgsSUFJYlgsRUFBRUcsRUFBSVQsRUFBRSxHQUFLTSxFQUFFRyxHQUFJLEdBQU1ILEVBQUVJLEVBQUlULEtBRTdCRyxFQUFFLEVBQUksRUFFUEcsRUFBVUgsSUFBTUssRUFBR0ksS0FBS1EsU0FBU3JCLEVBQUdVLEdBQUcsR0FBS0UsRUFBR04sRUFBRU0sRUFBR08sRUFBR2IsRUFBRWEsR0FLdEROLEtBQUtPLElBQUlILEdBQVMsRUFHbkJWLEVBQVVILElBQU1LLEdBQUcsRUFBSUMsRUFBR0csS0FBS1EsU0FBU3BCLEVBQUdXLEVBQUdOLEVBQUVNLEVBQUdPLEVBQUdiLEVBQUVhLEdBS3hEWixFQUFVSCxJQUFNSyxFQUFHVCxFQUFFLEVBQUdVLEVBQUdHLEtBQUtRLFNBQVNwQixFQUFHVyxFQUFHTixFQUFFTSxFQUFHTyxFQUFHYixFQUFFYSxLQTFFbkUsR0FBSUcsR0FBU0MsU0FBU0MsZUFBZSxZQUNqQzFCLEVBQU13QixFQUFPRyxXQUFXLE1BR3hCekIsRUFBSUwsT0FBTytCLFdBQ1h6QixFQUFJLEdBQ1JxQixHQUFPSyxNQUFRM0IsRUFDZnNCLEVBQU9NLE9BQVMzQixDQUtoQixLQUFJLEdBRkFJLEdBQUssSUFDTEUsS0FDSUgsRUFBSSxFQUFHQSxFQUFJQyxFQUFJRCxJQUVyQkcsRUFBVXNCLE1BQ1JwQixFQUFHSSxLQUFLUSxTQUFTckIsRUFDakJVLEVBQUdHLEtBQUtRLFNBQVNwQixFQUNqQlcsRUFBaUIsRUFBZEMsS0FBS1EsU0FBVyxFQUNuQkYsRUFBR04sS0FBS1EsU0FBU2hCLEdBdUJyQixJQUFJWSxHQUFRLENBeUNaYSxhQUFZakMsRUFBTSIsImZpbGUiOiJzY3JpcHRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFuZ3VsYXJcclxuLm1vZHVsZSgnYXBwJywgW1xyXG4gICd1aS5yb3V0ZXInXHJcbl0pXHJcblxyXG4uY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcclxuICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9ob21lJyk7XHJcbiAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgIC8vIEhvbWUgc3RhdGUgYW5kIG5lc3RlZCB2aWV3c1xyXG4gICAgICAgIC5zdGF0ZSgnaG9tZScsIHtcclxuICAgICAgICAgICAgdXJsOiAnL2hvbWUnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9wYXJ0aWFsLWhvbWUuaHRtbCdcclxuICAgICAgICB9KVxyXG4gICAgICAgIC8vIEFib3V0IHBhZ2UgYW5kIG11bHRpcGxlIG5hbWVkIHZpZXdzXHJcbiAgICAgICAgLnN0YXRlKCdhYm91dCcsIHtcclxuICAgICAgICAgICAgdXJsOiAnL2Fib3V0J1xyXG4gICAgICAgIH0pO1xyXG5cclxufSk7XG4iLCJ3aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKXtcclxuICAvL2NhbnZhcyBpbml0XHJcbiAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGFyYWxsYXhcIik7XHJcbiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcblxyXG4gIC8vY2FudmFzIGRpbWVuc2lvbnNcclxuICB2YXIgVyA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gIHZhciBIID0gMzAwO1xyXG4gIGNhbnZhcy53aWR0aCA9IFc7XHJcbiAgY2FudmFzLmhlaWdodCA9IEg7XHJcblxyXG4gIC8vc25vd2ZsYWtlIHBhcnRpY2xlc1xyXG4gIHZhciBtcCA9IDEwMDsgLy9tYXggcGFydGljbGVzXHJcbiAgdmFyIHBhcnRpY2xlcyA9IFtdO1xyXG4gIGZvcih2YXIgaSA9IDA7IGkgPCBtcDsgaSsrKVxyXG4gIHtcclxuICAgIHBhcnRpY2xlcy5wdXNoKHtcclxuICAgICAgeDogTWF0aC5yYW5kb20oKSpXLCAvL3gtY29vcmRpbmF0ZVxyXG4gICAgICB5OiBNYXRoLnJhbmRvbSgpKkgsIC8veS1jb29yZGluYXRlXHJcbiAgICAgIHI6IE1hdGgucmFuZG9tKCkqNCsxLCAvL3JhZGl1c1xyXG4gICAgICBkOiBNYXRoLnJhbmRvbSgpKm1wIC8vZGVuc2l0eVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvL0xldHMgZHJhdyB0aGUgZmxha2VzXHJcbiAgZnVuY3Rpb24gZHJhdygpXHJcbiAge1xyXG4gICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBXLCBIKTtcclxuXHJcbiAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOClcIjtcclxuICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgIGZvcih2YXIgaSA9IDA7IGkgPCBtcDsgaSsrKVxyXG4gICAge1xyXG4gICAgICB2YXIgcCA9IHBhcnRpY2xlc1tpXTtcclxuICAgICAgY3R4Lm1vdmVUbyhwLngsIHAueSk7XHJcbiAgICAgIGN0eC5hcmMocC54LCBwLnksIHAuciwgMCwgTWF0aC5QSSoyLCB0cnVlKTtcclxuICAgIH1cclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICB1cGRhdGUoKTtcclxuICB9XHJcblxyXG4gIC8vRnVuY3Rpb24gdG8gbW92ZSB0aGUgc25vd2ZsYWtlc1xyXG4gIC8vYW5nbGUgd2lsbCBiZSBhbiBvbmdvaW5nIGluY3JlbWVudGFsIGZsYWcuIFNpbiBhbmQgQ29zIGZ1bmN0aW9ucyB3aWxsIGJlIGFwcGxpZWQgdG8gaXQgdG8gY3JlYXRlIHZlcnRpY2FsIGFuZCBob3Jpem9udGFsIG1vdmVtZW50cyBvZiB0aGUgZmxha2VzXHJcbiAgdmFyIGFuZ2xlID0gMDtcclxuICBmdW5jdGlvbiB1cGRhdGUoKVxyXG4gIHtcclxuICAgIGFuZ2xlICs9IDAuMDE7XHJcbiAgICBmb3IodmFyIGkgPSAwOyBpIDwgbXA7IGkrKylcclxuICAgIHtcclxuICAgICAgdmFyIHAgPSBwYXJ0aWNsZXNbaV07XHJcbiAgICAgIC8vVXBkYXRpbmcgWCBhbmQgWSBjb29yZGluYXRlc1xyXG4gICAgICAvL1dlIHdpbGwgYWRkIDEgdG8gdGhlIGNvcyBmdW5jdGlvbiB0byBwcmV2ZW50IG5lZ2F0aXZlIHZhbHVlcyB3aGljaCB3aWxsIGxlYWQgZmxha2VzIHRvIG1vdmUgdXB3YXJkc1xyXG4gICAgICAvL0V2ZXJ5IHBhcnRpY2xlIGhhcyBpdHMgb3duIGRlbnNpdHkgd2hpY2ggY2FuIGJlIHVzZWQgdG8gbWFrZSB0aGUgZG93bndhcmQgbW92ZW1lbnQgZGlmZmVyZW50IGZvciBlYWNoIGZsYWtlXHJcbiAgICAgIC8vTGV0cyBtYWtlIGl0IG1vcmUgcmFuZG9tIGJ5IGFkZGluZyBpbiB0aGUgcmFkaXVzXHJcbiAgICAgIHAueSArPSBNYXRoLmNvcyhhbmdsZStwLmQpICsgMSArIHAuci8yO1xyXG4gICAgICBwLnggKz0gTWF0aC5zaW4oYW5nbGUpICogMjtcclxuXHJcbiAgICAgIC8vU2VuZGluZyBmbGFrZXMgYmFjayBmcm9tIHRoZSB0b3Agd2hlbiBpdCBleGl0c1xyXG4gICAgICAvL0xldHMgbWFrZSBpdCBhIGJpdCBtb3JlIG9yZ2FuaWMgYW5kIGxldCBmbGFrZXMgZW50ZXIgZnJvbSB0aGUgbGVmdCBhbmQgcmlnaHQgYWxzby5cclxuICAgICAgaWYocC54ID4gVys1IHx8IHAueCA8IC01IHx8IHAueSA+IEgpXHJcbiAgICAgIHtcclxuICAgICAgICBpZihpJTMgPiAwKSAvLzY2LjY3JSBvZiB0aGUgZmxha2VzXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcGFydGljbGVzW2ldID0ge3g6IE1hdGgucmFuZG9tKCkqVywgeTogLTEwLCByOiBwLnIsIGQ6IHAuZH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICAvL0lmIHRoZSBmbGFrZSBpcyBleGl0dGluZyBmcm9tIHRoZSByaWdodFxyXG4gICAgICAgICAgaWYoTWF0aC5zaW4oYW5nbGUpID4gMClcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgLy9FbnRlciBmcm9tIHRoZSBsZWZ0XHJcbiAgICAgICAgICAgIHBhcnRpY2xlc1tpXSA9IHt4OiAtNSwgeTogTWF0aC5yYW5kb20oKSpILCByOiBwLnIsIGQ6IHAuZH07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIC8vRW50ZXIgZnJvbSB0aGUgcmlnaHRcclxuICAgICAgICAgICAgcGFydGljbGVzW2ldID0ge3g6IFcrNSwgeTogTWF0aC5yYW5kb20oKSpILCByOiBwLnIsIGQ6IHAuZH07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL2FuaW1hdGlvbiBsb29wXHJcbiAgc2V0SW50ZXJ2YWwoZHJhdywgMzMpO1xyXG59O1xyXG4iXX0=
